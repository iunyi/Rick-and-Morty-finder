{"version":3,"sources":["images/logo.png","images/portal.gif","services/getDataFromApi.js","components/Filter.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/NoResults.js","components/App.js","services/ScrollToTop.js","index.js"],"names":["module","exports","getDataFromApi","a","Promise","all","fetchData","fetchedData","flat","endpoint","fetch","response","json","responseData","results","Filter","props","preventDefault","bind","removeAllScreenHeader","handleChange","handleOnClick","ev","header","document","querySelector","classList","remove","add","this","className","src","logo","alt","onSubmit","type","placeholder","onChange","value","onClick","Component","CharacterCard","image","name","species","Fragment","role","aria-label","CharacterList","charactersJSX","characters","map","character","index","key","to","id","CharacterDetail","min","max","getRandomNumber","randomNumber","parseInt","Math","random","setState","state","showInfo","dontShowInfo","handlePortalClick","showSpoilerAlert","checkAllCharacters","url","window","location","href","idFromURL","substring","lastIndexOf","origin","episode","length","status","portal","NoResults","nameFilter","App","data","filterName","renderFilteredCharacters","getMatchingCharacter","then","target","sort","b","filter","toUpperCase","includes","routeCharacterID","match","params","find","exact","path","render","React","ScrollToTop","prevProps","scrollTo","withRouter","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.6eadae96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/portal.d89756c2.gif\";","const getDataFromApi = async () => {\n    const fetchedData = await Promise.all([\n        fetchData('https://rickandmortyapi.com/api/character/'),\n        fetchData('https://rickandmortyapi.com/api/character/?page=2'),\n        fetchData('https://rickandmortyapi.com/api/character/?page=3'),\n        fetchData('https://rickandmortyapi.com/api/character/?page=4'),\n        fetchData('https://rickandmortyapi.com/api/character/?page=5'),\n        fetchData('https://rickandmortyapi.com/api/character/?page=10'),\n    ]);\n    return fetchedData.flat();\n};\n\nconst fetchData = async (endpoint) => {\n    const response = await fetch(endpoint);\n    const responseData = await response.json();\n    return responseData.results;\n};\n\nexport default getDataFromApi;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/components/filter.scss';\nimport logo from '../images/logo.png';\n\nclass Filter extends Component {\n    constructor(props) {\n        super(props);\n        this.preventDefault = this.preventDefault.bind(this);\n        this.removeAllScreenHeader = this.removeAllScreenHeader.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleOnClick = this.handleOnClick.bind(this);\n    }\n\n    preventDefault(ev){\n        ev.preventDefault()\n    }\n\n    removeAllScreenHeader(){\n        const header = document.querySelector('.header');\n        header.classList.remove('header_before');\n        header.classList.add('header_after');\n    }\n\n    handleChange(ev){\n        this.props.handleChange(ev);\n        this.removeAllScreenHeader();\n    }\n\n    handleOnClick(){\n        this.props.handleOnClick();\n        this.removeAllScreenHeader();\n    }\n    \n    render() {\n        return (\n            <header className=\"header header_before \">\n                <img className=\"logo\" src={logo} alt=\"Rick and Morty logo\"/>\n                <div className=\"form_container\">\n                    <form className=\"form\" onSubmit={this.preventDefault}>\n                        <input \n                            className=\"form_input\" \n                            type=\"text\" \n                            placeholder=\"Enter the name of a character\" \n                            onChange={this.handleChange} \n                            value={this.props.value} \n                        />\n                    </form>\n                    <i className=\"fas fa-search\" onClick={this.handleOnClick}></i>\n                </div>\n            </header>\n        );\n    }\n}\n\nFilter.propTypes = {\n    handleChange: PropTypes.func,\n    handleOnClick: PropTypes.func,\n    value: PropTypes.string\n}\n\nexport default Filter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/components/characterCard.scss';\n\nclass CharacterCard extends Component {\n    render() {\n        const {\n            image, \n            name, \n            species\n        } = this.props;\n\n        const speciesIcon = () => {\n            if(species === 'Human') {\n                return (\n                    <span>\n                        <i className=\"fas fa-meh\"></i>\n                    </span>\n                )\n            } else if(species === 'Alien') {\n                return <span role=\"img\" aria-label=\"alien\">👾</span>\n            } \n        }\n        \n        return (\n            <React.Fragment>\n                <div className=\"image_container\">\n                    <img className=\"image_size\" src={image} alt={name}/>\n                </div>\n                <div className=\"text_container\">\n                    <h3 className=\"character_name\">\n                        {name} \n                    </h3>\n                    <span className=\"character_species\">\n                            {speciesIcon()}\n                    </span>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nCharacterCard.propTypes = {\n    image: PropTypes.string,\n    name: PropTypes.string,\n    species: PropTypes.string\n}\n\nexport default CharacterCard;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport CharacterCard from './CharacterCard';\nimport '../stylesheets/components/characterList.scss';\n\nclass CharacterList extends Component {\n    render() {\n        const charactersJSX = this.props.characters.map((character, index) => {\n            return (\n                <li className=\"list_item\" key={index}>\n                    <Link to={`/character/${character.id}`}>\n                        <CharacterCard \n                            index={index}\n                            image={character.image}\n                            name={character.name}\n                            species={character.species}\n                        />\n                    </Link>\n                </li>\n            )\n        })\n        return (\n            <main className=\"main_list\">\n                <div className=\"wrapper\">\n                    <ul className=\"list\">{charactersJSX}</ul>\n                </div>\n            </main>\n        );\n    }\n}\n\nCharacterList.propTypes = {\n    characters: PropTypes.array\n};\n\nexport default CharacterList;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/components/characterDetail.scss';\nimport portal from '../images/portal.gif';\n\nclass CharacterDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            random: 1,\n        }\n        this.showInfo = this.showInfo.bind(this);\n        this.dontShowInfo = this.dontShowInfo.bind(this);\n        this.handlePortalClick = this.handlePortalClick.bind(this);\n        this.getRandomNumber = this.getRandomNumber.bind(this);\n        this.showSpoilerAlert = this.showSpoilerAlert.bind(this);\n    }\n\n    // Get a random number to show a random character\n    min = 1;\n    max = 120;\n    getRandomNumber = () => {\n        let randomNumber = parseInt(this.min + (Math.random() * (this.max - this.min)));\n\n        if (randomNumber > 100) {\n            randomNumber += 80\n        }\n        \n        this.setState({\n          random: randomNumber\n        });\n    };\n\n    showSpoilerAlert(){\n        const status = document.querySelector('.status');\n        status.classList.remove('hidden');\n        const spoiler = document.querySelector('.spoiler');\n        spoiler.classList.add('hidden');\n        const spoilerAlert = document.querySelector('.spoiler_alert');\n        spoilerAlert.classList.remove('hidden');\n        const censored = document.querySelector('.censored');\n        censored.classList.remove('hidden');\n    }\n    \n    handlePortalClick(){\n        this.getRandomNumber();\n        this.props.checkAllCharacters();\n        this.showSpoilerAlert();\n    }\n\n    showInfo(){\n        const spoiler = document.querySelector('.spoiler');\n        spoiler.classList.remove('hidden');\n        const spoilerAlert = document.querySelector('.spoiler_alert');\n        spoilerAlert.classList.add('hidden');\n        const censored = document.querySelector('.censored');\n        censored.classList.add('hidden');\n    }\n\n    dontShowInfo(){\n        const spoilerAlert = document.querySelector('.spoiler_alert');\n        spoilerAlert.classList.add('hidden');\n        const status = document.querySelector('.status');\n        status.classList.add('hidden');\n    }\n\n    render() {\n        const url = window.location.href\n        const idFromURL= url.substring(url.lastIndexOf('/')+1);\n        \n        return (\n            <main className=\"character_detail_container\">\n                <div className=\"detailed_card\">\n                    <Link to=\"/\">\n                        <div className=\"back\">\n                            <i className=\"fas fa-times\"\n                                id={idFromURL}\n                            ></i>\n                        </div>\n                    </Link>\n                    {this.props.character ? \n                        <section className=\"card\">\n                            <img \n                                className=\"card-image\" \n                                src={this.props.character.image} \n                                alt={this.props.character.name} \n                            />\n                            <div className=\"detail_card-text\">\n                                <p>\n                                    <span className=\"label\">Name: </span> \n                                    <span>{this.props.character.name}</span>\n                                </p>\n                                <p>\n                                    <span className=\"label\">Species: </span> \n                                    <span>{this.props.character.species}</span>\n                                </p>\n                                <p>\n                                    <span className=\"label\">Origin: </span> \n                                    <span>{this.props.character.origin.name}</span>\n                                </p>\n                                <p>\n                                    <span className=\"label\">Number of episodes: </span> \n                                    <span>{this.props.character.episode.length}</span>\n                                </p>\n                                <div className=\"status\">\n                                    <span className=\"label\">Status:&nbsp;</span>\n                                    <span className=\"censored\">_______</span>\n                                    <span className=\"spoiler hidden\"> {this.props.character.status}</span>\n                                    <div className=\"spoiler_alert\">\n                                        <h4 className=\"alert_title\">Spoiler alert!</h4>\n                                        <p className=\"alert_text\">Are you sure you want to check whether {this.props.character.name} is alive?</p>\n                                        <div className=\"spoiler_button\">\n                                            <button className=\"spoiler_button_yes\" onClick={this.showInfo}>YES</button>\n                                            <button className=\"spoiler_button_no\" onClick={this.dontShowInfo}>Not yet!</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </section>  \n                        :\n                        <p> The entered URL does not exist. </p>\n                    }\n                </div>\n                <Link to={`/character/${this.state.random}`}>\n                    <img \n                        className=\"portal\" \n                        src={portal} \n                        alt=\"Take me somewhere else\" \n                        onClick={this.handlePortalClick}\n                    />\n                </Link>\n            </main>\n        );\n    }\n}\n\nexport default CharacterDetail;","import React, { Component } from 'react';\nimport '../stylesheets/components/noResults.scss';\n\nclass NoResults extends Component {\n    render() {\n        return (\n            <div className=\"no_results_container\">\n                <p className=\"no_results\">\n                    We can't seem to find a character named {this.props.nameFilter}.\n                </p>\n                <p className=\"no_results\">\n                    You might be looking in the wrong dimension!\n                </p>\n             </div>\n        );\n    }\n}\n\nexport default NoResults;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport getDataFromApi from '../services/getDataFromApi';\nimport Filter from './Filter';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport '../stylesheets/components/App.scss';\nimport NoResults from './NoResults';\n\nclass App extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: [],\n\t\t\tnameFilter: ''\n\t\t}\n\t\tthis.filterName = this.filterName.bind(this);\n\t\tthis.renderFilteredCharacters = this.renderFilteredCharacters.bind(this);\n\t\tthis.checkAllCharacters = this.checkAllCharacters.bind(this);\n\t\tthis.getMatchingCharacter = this.getMatchingCharacter.bind(this)\n\t}\n\n\tcomponentDidMount(){\n\t\tgetDataFromApi()\n\t\t.then(responseData => {\n\t\t\tthis.setState({\n\t\t\t\tdata: responseData\n\t\t\t})\n\t\t})\n\t}\n\n\tfilterName(ev){\n\t\tthis.setState({\n\t\t\tnameFilter: ev.target.value\n\t\t})\n\t}\n\n\trenderFilteredCharacters() {\n\t\tconst characters = this.state.data;\n\n\t\t// Sort name alphabetically\n\t\tcharacters.sort((a, b) => {\n\t\tif (a.name > b.name) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (a.name < b.name) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t\t});\n\n\t\t// Filter names by name, according to the entered input\n\t\treturn characters.filter(character => {\n\t\treturn character.name\n\t\t\t.toUpperCase()\n\t\t\t.includes(this.state.nameFilter.toUpperCase())\n\t\t})\n\t}\n\n\tcheckAllCharacters(){\n\t\tthis.setState({\n\t\t\tnameFilter: ''\n\t\t})\n\t}\n\n\tgetMatchingCharacter(props) {\n\t\tconst routeCharacterID = parseInt(props.match.params.id);\n\t\tconst character = (this.state.data).find(character => character.id === routeCharacterID);\n\t\tif (!character) return \n\t\treturn (\n\t\t\t<CharacterDetail \n\t\t\t\tcharacter={character} \n\t\t\t\tcheckAllCharacters={this.checkAllCharacters}\n\t\t\t/>\n\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t<Filter handleChange={this.filterName} handleOnClick={this.renderFilteredCharacters} value={this.state.nameFilter}/>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.renderFilteredCharacters().length !== 0 ?\n\t\t\t\t\t\t\t<CharacterList \n\t\t\t\t\t\t\t\tclassName=\"character_list hidden\" \n\t\t\t\t\t\t\t\tcharacters={this.renderFilteredCharacters()} \n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<NoResults \n\t\t\t\t\t\t\t\tnameFilter={this.state.nameFilter}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t} \n\t\t\t\t</Route>\n\t\t\t\t<Route \n\t\t\t\t\tpath=\"/character/:id\"\n\t\t\t\t\trender={this.getMatchingCharacter}\n\t\t\t\t/>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends Component {\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.location !== prevProps.location) {\n\t\t\twindow.scrollTo(0, 0);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn <React.Fragment />\n\t}\n}\n\nexport default withRouter(ScrollToTop)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\nimport ScrollToTop from './services/ScrollToTop';\n\nReactDOM.render(\n  <HashRouter>\n    <ScrollToTop />\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}